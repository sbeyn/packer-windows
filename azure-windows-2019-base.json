{
  "builders": [
    {
      "type": "azure-arm",
  
      "client_id": "{{user `client_id`}}",
      "client_secret": "{{user `client_secret`}}",
      "tenant_id": "{{user `tenant_id`}}",
      "subscription_id": "{{user `subscription_id`}}",

      "managed_image_name": "WindowsServer2016-Base-Packer",
      "managed_image_resource_group_name": "packerImageBuilds",

      "os_type": "Windows",
      "image_publisher": "MicrosoftWindowsServer",
      "image_offer": "WindowsServer",
      "image_sku": "2019-Datacenter",
  
      "communicator": "winrm",
      "winrm_use_ssl": true,
      "winrm_insecure": true,
      "winrm_timeout": "5m",
      "winrm_username": "packer",
 
      "location": "{{user `azure-region`}}",
      "vm_size": "{{user `vm-size`}}"

    }
  ],
  "provisioners": [
    {
      "type": "ansible",
      "playbook_file": "playbooks/base.yml",
      "user": "packer",
      "use_proxy": false,
      "extra_arguments": [
        "-e", "ansible_winrm_server_cert_validation=ignore",
        "-e", "ansible_winrm_transport=ntlm"
      ],
      "keep_inventory_file": true
    },
    {
      "type": "powershell",
      "inline": [
        "Add-WindowsFeature Web-Server",
        "while ((Get-Service RdAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
        "while ((Get-Service WindowsAzureTelemetryService).Status -ne 'Running') { Start-Sleep -s 5 }",
        "while ((Get-Service WindowsAzureGuestAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
        "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit",
        "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }"
      ]
    }
  ]
}
